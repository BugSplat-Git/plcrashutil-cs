// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PLCrashReport.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Plcrash {

  /// <summary>Holder for reflection information generated from PLCrashReport.proto</summary>
  public static partial class PLCrashReportReflection {

    #region Descriptor
    /// <summary>File descriptor for PLCrashReport.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PLCrashReportReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQTENyYXNoUmVwb3J0LnByb3RvEgdwbGNyYXNoIsMRCgtDcmFzaFJlcG9y",
            "dBI0CgtzeXN0ZW1faW5mbxgBIAIoCzIfLnBsY3Jhc2guQ3Jhc2hSZXBvcnQu",
            "U3lzdGVtSW5mbxI+ChBhcHBsaWNhdGlvbl9pbmZvGAIgAigLMiQucGxjcmFz",
            "aC5DcmFzaFJlcG9ydC5BcHBsaWNhdGlvbkluZm8SLAoHdGhyZWFkcxgDIAMo",
            "CzIbLnBsY3Jhc2guQ3Jhc2hSZXBvcnQuVGhyZWFkEjcKDWJpbmFyeV9pbWFn",
            "ZXMYBCADKAsyIC5wbGNyYXNoLkNyYXNoUmVwb3J0LkJpbmFyeUltYWdlEjEK",
            "CWV4Y2VwdGlvbhgFIAEoCzIeLnBsY3Jhc2guQ3Jhc2hSZXBvcnQuRXhjZXB0",
            "aW9uEisKBnNpZ25hbBgGIAIoCzIbLnBsY3Jhc2guQ3Jhc2hSZXBvcnQuU2ln",
            "bmFsEjYKDHByb2Nlc3NfaW5mbxgHIAEoCzIgLnBsY3Jhc2guQ3Jhc2hSZXBv",
            "cnQuUHJvY2Vzc0luZm8SNgoMbWFjaGluZV9pbmZvGAggASgLMiAucGxjcmFz",
            "aC5DcmFzaFJlcG9ydC5NYWNoaW5lSW5mbxI0CgtyZXBvcnRfaW5mbxgJIAEo",
            "CzIfLnBsY3Jhc2guQ3Jhc2hSZXBvcnQuUmVwb3J0SW5mbxITCgtjdXN0b21f",
            "ZGF0YRgKIAEoDBrDAQoJUHJvY2Vzc29yElQKCGVuY29kaW5nGAEgASgOMisu",
            "cGxjcmFzaC5DcmFzaFJlcG9ydC5Qcm9jZXNzb3IuVHlwZUVuY29kaW5nOhVU",
            "WVBFX0VOQ09ESU5HX1VOS05PV04SDAoEdHlwZRgCIAIoBBIPCgdzdWJ0eXBl",
            "GAMgAigEIkEKDFR5cGVFbmNvZGluZxIZChVUWVBFX0VOQ09ESU5HX1VOS05P",
            "V04QABIWChJUWVBFX0VOQ09ESU5HX01BQ0gQARrFAgoKU3lzdGVtSW5mbxJV",
            "ChBvcGVyYXRpbmdfc3lzdGVtGAEgASgOMi8ucGxjcmFzaC5DcmFzaFJlcG9y",
            "dC5TeXN0ZW1JbmZvLk9wZXJhdGluZ1N5c3RlbToKT1NfVU5LTk9XThISCgpv",
            "c192ZXJzaW9uGAIgAigJEkEKDGFyY2hpdGVjdHVyZRgDIAIoDjIVLnBsY3Jh",
            "c2guQXJjaGl0ZWN0dXJlOhRBUkNISVRFQ1RVUkVfVU5LTk9XThIRCgl0aW1l",
            "c3RhbXAYBCACKAMSEAoIb3NfYnVpbGQYBSABKAkiZAoPT3BlcmF0aW5nU3lz",
            "dGVtEgwKCE1BQ19PU19YEAASDQoJSVBIT05FX09TEAESFAoQSVBIT05FX1NJ",
            "TVVMQVRPUhACEg4KCkFQUExFX1RWT1MQBBIOCgpPU19VTktOT1dOEAMaUQoP",
            "QXBwbGljYXRpb25JbmZvEhIKCmlkZW50aWZpZXIYASACKAkSDwoHdmVyc2lv",
            "bhgCIAIoCRIZChFtYXJrZXRpbmdfdmVyc2lvbhgDIAEoCRpCCgZTeW1ib2wS",
            "DAoEbmFtZRgBIAIoCRIVCg1zdGFydF9hZGRyZXNzGAIgAigEEhMKC2VuZF9h",
            "ZGRyZXNzGAMgASgEGpsCCgZUaHJlYWQSFQoNdGhyZWFkX251bWJlchgBIAIo",
            "DRI2CgZmcmFtZXMYAiADKAsyJi5wbGNyYXNoLkNyYXNoUmVwb3J0LlRocmVh",
            "ZC5TdGFja0ZyYW1lEg8KB2NyYXNoZWQYAyACKAgSPAoJcmVnaXN0ZXJzGAQg",
            "AygLMikucGxjcmFzaC5DcmFzaFJlcG9ydC5UaHJlYWQuUmVnaXN0ZXJWYWx1",
            "ZRpFCgpTdGFja0ZyYW1lEgoKAnBjGAMgAigEEisKBnN5bWJvbBgGIAEoCzIb",
            "LnBsY3Jhc2guQ3Jhc2hSZXBvcnQuU3ltYm9sGiwKDVJlZ2lzdGVyVmFsdWUS",
            "DAoEbmFtZRgBIAIoCRINCgV2YWx1ZRgCIAIoBBqAAQoLQmluYXJ5SW1hZ2US",
            "FAoMYmFzZV9hZGRyZXNzGAEgAigEEgwKBHNpemUYAiACKAQSDAoEbmFtZRgD",
            "IAIoCRIMCgR1dWlkGAQgASgMEjEKCWNvZGVfdHlwZRgFIAEoCzIeLnBsY3Jh",
            "c2guQ3Jhc2hSZXBvcnQuUHJvY2Vzc29yGmEKCUV4Y2VwdGlvbhIMCgRuYW1l",
            "GAEgAigJEg4KBnJlYXNvbhgCIAIoCRI2CgZmcmFtZXMYAyADKAsyJi5wbGNy",
            "YXNoLkNyYXNoUmVwb3J0LlRocmVhZC5TdGFja0ZyYW1lGqYBCgZTaWduYWwS",
            "DAoEbmFtZRgBIAIoCRIMCgRjb2RlGAIgAigJEg8KB2FkZHJlc3MYAyACKAQS",
            "QQoObWFjaF9leGNlcHRpb24YBCABKAsyKS5wbGNyYXNoLkNyYXNoUmVwb3J0",
            "LlNpZ25hbC5NYWNoRXhjZXB0aW9uGiwKDU1hY2hFeGNlcHRpb24SDAoEdHlw",
            "ZRgBIAIoBBINCgVjb2RlcxgCIAMoBBqpAQoLUHJvY2Vzc0luZm8SFAoMcHJv",
            "Y2Vzc19uYW1lGAEgASgJEhIKCnByb2Nlc3NfaWQYAiACKA0SFAoMcHJvY2Vz",
            "c19wYXRoGAMgASgJEhsKE3BhcmVudF9wcm9jZXNzX25hbWUYBCABKAkSGQoR",
            "cGFyZW50X3Byb2Nlc3NfaWQYBSACKA0SDgoGbmF0aXZlGAYgAigIEhIKCnN0",
            "YXJ0X3RpbWUYByABKAQaiQEKC01hY2hpbmVJbmZvEg0KBW1vZGVsGAEgASgJ",
            "EjEKCXByb2Nlc3NvchgCIAIoCzIeLnBsY3Jhc2guQ3Jhc2hSZXBvcnQuUHJv",
            "Y2Vzc29yEhcKD3Byb2Nlc3Nvcl9jb3VudBgDIAIoDRIfChdsb2dpY2FsX3By",
            "b2Nlc3Nvcl9jb3VudBgEIAIoDRoyCgpSZXBvcnRJbmZvEhYKDnVzZXJfcmVx",
            "dWVzdGVkGAEgAigIEgwKBHV1aWQYAiABKAwqagoMQXJjaGl0ZWN0dXJlEgoK",
            "Blg4Nl8zMhAAEgoKBlg4Nl82NBABEgkKBUFSTVY2EAISBwoDUFBDEAMSCQoF",
            "UFBDNjQQBBIJCgVBUk1WNxAFEhgKFEFSQ0hJVEVDVFVSRV9VTktOT1dOEAZC",
            "LgocY29vcC5wbGF1c2libGUuY3Jhc2hyZXBvcnRlckIOQ3Jhc2hSZXBvcnRf",
            "cGI="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Plcrash.Architecture), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport), global::Plcrash.CrashReport.Parser, new[]{ "SystemInfo", "ApplicationInfo", "Threads", "BinaryImages", "Exception", "Signal", "ProcessInfo", "MachineInfo", "ReportInfo", "CustomData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.Processor), global::Plcrash.CrashReport.Types.Processor.Parser, new[]{ "Encoding", "Type", "Subtype" }, null, new[]{ typeof(global::Plcrash.CrashReport.Types.Processor.Types.TypeEncoding) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.SystemInfo), global::Plcrash.CrashReport.Types.SystemInfo.Parser, new[]{ "OperatingSystem", "OsVersion", "Architecture", "Timestamp", "OsBuild" }, null, new[]{ typeof(global::Plcrash.CrashReport.Types.SystemInfo.Types.OperatingSystem) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.ApplicationInfo), global::Plcrash.CrashReport.Types.ApplicationInfo.Parser, new[]{ "Identifier", "Version", "MarketingVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.Symbol), global::Plcrash.CrashReport.Types.Symbol.Parser, new[]{ "Name", "StartAddress", "EndAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.Thread), global::Plcrash.CrashReport.Types.Thread.Parser, new[]{ "ThreadNumber", "Frames", "Crashed", "Registers" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.Thread.Types.StackFrame), global::Plcrash.CrashReport.Types.Thread.Types.StackFrame.Parser, new[]{ "Pc", "Symbol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.Thread.Types.RegisterValue), global::Plcrash.CrashReport.Types.Thread.Types.RegisterValue.Parser, new[]{ "Name", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.BinaryImage), global::Plcrash.CrashReport.Types.BinaryImage.Parser, new[]{ "BaseAddress", "Size", "Name", "Uuid", "CodeType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.Exception), global::Plcrash.CrashReport.Types.Exception.Parser, new[]{ "Name", "Reason", "Frames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.Signal), global::Plcrash.CrashReport.Types.Signal.Parser, new[]{ "Name", "Code", "Address", "MachException" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.Signal.Types.MachException), global::Plcrash.CrashReport.Types.Signal.Types.MachException.Parser, new[]{ "Type", "Codes" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.ProcessInfo), global::Plcrash.CrashReport.Types.ProcessInfo.Parser, new[]{ "ProcessName", "ProcessId", "ProcessPath", "ParentProcessName", "ParentProcessId", "Native", "StartTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.MachineInfo), global::Plcrash.CrashReport.Types.MachineInfo.Parser, new[]{ "Model", "Processor", "ProcessorCount", "LogicalProcessorCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Plcrash.CrashReport.Types.ReportInfo), global::Plcrash.CrashReport.Types.ReportInfo.Parser, new[]{ "UserRequested", "Uuid" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Legacy processor architecture type codes. These codes have been deprecated. 
  /// </summary>
  public enum Architecture {
    /// <summary>
    /// x86 
    /// </summary>
    [pbr::OriginalName("X86_32")] X8632 = 0,
    /// <summary>
    /// x86-64 
    /// </summary>
    [pbr::OriginalName("X86_64")] X8664 = 1,
    /// <summary>
    /// ARMv6 
    /// </summary>
    [pbr::OriginalName("ARMV6")] Armv6 = 2,
    /// <summary>
    /// PPC 
    /// </summary>
    [pbr::OriginalName("PPC")] Ppc = 3,
    /// <summary>
    ///* PPC64 
    /// </summary>
    [pbr::OriginalName("PPC64")] Ppc64 = 4,
    /// <summary>
    /// ARMv7 
    /// </summary>
    [pbr::OriginalName("ARMV7")] Armv7 = 5,
    /// <summary>
    /// Unknown processor type. 
    /// </summary>
    [pbr::OriginalName("ARCHITECTURE_UNKNOWN")] Unknown = 6,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A crash report 
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CrashReport : pb::IMessage<CrashReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CrashReport> _parser = new pb::MessageParser<CrashReport>(() => new CrashReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CrashReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Plcrash.PLCrashReportReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CrashReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CrashReport(CrashReport other) : this() {
      systemInfo_ = other.systemInfo_ != null ? other.systemInfo_.Clone() : null;
      applicationInfo_ = other.applicationInfo_ != null ? other.applicationInfo_.Clone() : null;
      threads_ = other.threads_.Clone();
      binaryImages_ = other.binaryImages_.Clone();
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      signal_ = other.signal_ != null ? other.signal_.Clone() : null;
      processInfo_ = other.processInfo_ != null ? other.processInfo_.Clone() : null;
      machineInfo_ = other.machineInfo_ != null ? other.machineInfo_.Clone() : null;
      reportInfo_ = other.reportInfo_ != null ? other.reportInfo_.Clone() : null;
      customData_ = other.customData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CrashReport Clone() {
      return new CrashReport(this);
    }

    /// <summary>Field number for the "system_info" field.</summary>
    public const int SystemInfoFieldNumber = 1;
    private global::Plcrash.CrashReport.Types.SystemInfo systemInfo_;
    /// <summary>
    /// Host system data 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Plcrash.CrashReport.Types.SystemInfo SystemInfo {
      get { return systemInfo_; }
      set {
        systemInfo_ = value;
      }
    }

    /// <summary>Field number for the "application_info" field.</summary>
    public const int ApplicationInfoFieldNumber = 2;
    private global::Plcrash.CrashReport.Types.ApplicationInfo applicationInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Plcrash.CrashReport.Types.ApplicationInfo ApplicationInfo {
      get { return applicationInfo_; }
      set {
        applicationInfo_ = value;
      }
    }

    /// <summary>Field number for the "threads" field.</summary>
    public const int ThreadsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Plcrash.CrashReport.Types.Thread> _repeated_threads_codec
        = pb::FieldCodec.ForMessage(26, global::Plcrash.CrashReport.Types.Thread.Parser);
    private readonly pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread> threads_ = new pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread>();
    /// <summary>
    /// All backtraces 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread> Threads {
      get { return threads_; }
    }

    /// <summary>Field number for the "binary_images" field.</summary>
    public const int BinaryImagesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Plcrash.CrashReport.Types.BinaryImage> _repeated_binaryImages_codec
        = pb::FieldCodec.ForMessage(34, global::Plcrash.CrashReport.Types.BinaryImage.Parser);
    private readonly pbc::RepeatedField<global::Plcrash.CrashReport.Types.BinaryImage> binaryImages_ = new pbc::RepeatedField<global::Plcrash.CrashReport.Types.BinaryImage>();
    /// <summary>
    /// All loaded binary images 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Plcrash.CrashReport.Types.BinaryImage> BinaryImages {
      get { return binaryImages_; }
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 5;
    private global::Plcrash.CrashReport.Types.Exception exception_;
    /// <summary>
    /// The exception that triggered the crash (if any) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Plcrash.CrashReport.Types.Exception Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    /// <summary>Field number for the "signal" field.</summary>
    public const int SignalFieldNumber = 6;
    private global::Plcrash.CrashReport.Types.Signal signal_;
    /// <summary>
    /// The signal that triggered the crash 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Plcrash.CrashReport.Types.Signal Signal {
      get { return signal_; }
      set {
        signal_ = value;
      }
    }

    /// <summary>Field number for the "process_info" field.</summary>
    public const int ProcessInfoFieldNumber = 7;
    private global::Plcrash.CrashReport.Types.ProcessInfo processInfo_;
    /// <summary>
    /// The process info. Required for all v1.1+ crash reports. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Plcrash.CrashReport.Types.ProcessInfo ProcessInfo {
      get { return processInfo_; }
      set {
        processInfo_ = value;
      }
    }

    /// <summary>Field number for the "machine_info" field.</summary>
    public const int MachineInfoFieldNumber = 8;
    private global::Plcrash.CrashReport.Types.MachineInfo machineInfo_;
    /// <summary>
    /// Host architecture information. Required for all v1.1+ crash reports. If unavailable, the information
    /// should be derived from the deprecated SystemInfo.architecture field. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Plcrash.CrashReport.Types.MachineInfo MachineInfo {
      get { return machineInfo_; }
      set {
        machineInfo_ = value;
      }
    }

    /// <summary>Field number for the "report_info" field.</summary>
    public const int ReportInfoFieldNumber = 9;
    private global::Plcrash.CrashReport.Types.ReportInfo reportInfo_;
    /// <summary>
    /// Report format information. Required for all v1.1+ crash reports. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Plcrash.CrashReport.Types.ReportInfo ReportInfo {
      get { return reportInfo_; }
      set {
        reportInfo_ = value;
      }
    }

    /// <summary>Field number for the "custom_data" field.</summary>
    public const int CustomDataFieldNumber = 10;
    private readonly static pb::ByteString CustomDataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString customData_;
    /// <summary>
    /// Custom data. Can be used by user to store contextual information for the crash. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CustomData {
      get { return customData_ ?? CustomDataDefaultValue; }
      set {
        customData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "custom_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCustomData {
      get { return customData_ != null; }
    }
    /// <summary>Clears the value of the "custom_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCustomData() {
      customData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CrashReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CrashReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SystemInfo, other.SystemInfo)) return false;
      if (!object.Equals(ApplicationInfo, other.ApplicationInfo)) return false;
      if(!threads_.Equals(other.threads_)) return false;
      if(!binaryImages_.Equals(other.binaryImages_)) return false;
      if (!object.Equals(Exception, other.Exception)) return false;
      if (!object.Equals(Signal, other.Signal)) return false;
      if (!object.Equals(ProcessInfo, other.ProcessInfo)) return false;
      if (!object.Equals(MachineInfo, other.MachineInfo)) return false;
      if (!object.Equals(ReportInfo, other.ReportInfo)) return false;
      if (CustomData != other.CustomData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (systemInfo_ != null) hash ^= SystemInfo.GetHashCode();
      if (applicationInfo_ != null) hash ^= ApplicationInfo.GetHashCode();
      hash ^= threads_.GetHashCode();
      hash ^= binaryImages_.GetHashCode();
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (signal_ != null) hash ^= Signal.GetHashCode();
      if (processInfo_ != null) hash ^= ProcessInfo.GetHashCode();
      if (machineInfo_ != null) hash ^= MachineInfo.GetHashCode();
      if (reportInfo_ != null) hash ^= ReportInfo.GetHashCode();
      if (HasCustomData) hash ^= CustomData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (systemInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SystemInfo);
      }
      if (applicationInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApplicationInfo);
      }
      threads_.WriteTo(output, _repeated_threads_codec);
      binaryImages_.WriteTo(output, _repeated_binaryImages_codec);
      if (exception_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Exception);
      }
      if (signal_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Signal);
      }
      if (processInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ProcessInfo);
      }
      if (machineInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MachineInfo);
      }
      if (reportInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ReportInfo);
      }
      if (HasCustomData) {
        output.WriteRawTag(82);
        output.WriteBytes(CustomData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (systemInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SystemInfo);
      }
      if (applicationInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApplicationInfo);
      }
      threads_.WriteTo(ref output, _repeated_threads_codec);
      binaryImages_.WriteTo(ref output, _repeated_binaryImages_codec);
      if (exception_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Exception);
      }
      if (signal_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Signal);
      }
      if (processInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ProcessInfo);
      }
      if (machineInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MachineInfo);
      }
      if (reportInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ReportInfo);
      }
      if (HasCustomData) {
        output.WriteRawTag(82);
        output.WriteBytes(CustomData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (systemInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemInfo);
      }
      if (applicationInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApplicationInfo);
      }
      size += threads_.CalculateSize(_repeated_threads_codec);
      size += binaryImages_.CalculateSize(_repeated_binaryImages_codec);
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (signal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signal);
      }
      if (processInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessInfo);
      }
      if (machineInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MachineInfo);
      }
      if (reportInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportInfo);
      }
      if (HasCustomData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CustomData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CrashReport other) {
      if (other == null) {
        return;
      }
      if (other.systemInfo_ != null) {
        if (systemInfo_ == null) {
          SystemInfo = new global::Plcrash.CrashReport.Types.SystemInfo();
        }
        SystemInfo.MergeFrom(other.SystemInfo);
      }
      if (other.applicationInfo_ != null) {
        if (applicationInfo_ == null) {
          ApplicationInfo = new global::Plcrash.CrashReport.Types.ApplicationInfo();
        }
        ApplicationInfo.MergeFrom(other.ApplicationInfo);
      }
      threads_.Add(other.threads_);
      binaryImages_.Add(other.binaryImages_);
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::Plcrash.CrashReport.Types.Exception();
        }
        Exception.MergeFrom(other.Exception);
      }
      if (other.signal_ != null) {
        if (signal_ == null) {
          Signal = new global::Plcrash.CrashReport.Types.Signal();
        }
        Signal.MergeFrom(other.Signal);
      }
      if (other.processInfo_ != null) {
        if (processInfo_ == null) {
          ProcessInfo = new global::Plcrash.CrashReport.Types.ProcessInfo();
        }
        ProcessInfo.MergeFrom(other.ProcessInfo);
      }
      if (other.machineInfo_ != null) {
        if (machineInfo_ == null) {
          MachineInfo = new global::Plcrash.CrashReport.Types.MachineInfo();
        }
        MachineInfo.MergeFrom(other.MachineInfo);
      }
      if (other.reportInfo_ != null) {
        if (reportInfo_ == null) {
          ReportInfo = new global::Plcrash.CrashReport.Types.ReportInfo();
        }
        ReportInfo.MergeFrom(other.ReportInfo);
      }
      if (other.HasCustomData) {
        CustomData = other.CustomData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (systemInfo_ == null) {
              SystemInfo = new global::Plcrash.CrashReport.Types.SystemInfo();
            }
            input.ReadMessage(SystemInfo);
            break;
          }
          case 18: {
            if (applicationInfo_ == null) {
              ApplicationInfo = new global::Plcrash.CrashReport.Types.ApplicationInfo();
            }
            input.ReadMessage(ApplicationInfo);
            break;
          }
          case 26: {
            threads_.AddEntriesFrom(input, _repeated_threads_codec);
            break;
          }
          case 34: {
            binaryImages_.AddEntriesFrom(input, _repeated_binaryImages_codec);
            break;
          }
          case 42: {
            if (exception_ == null) {
              Exception = new global::Plcrash.CrashReport.Types.Exception();
            }
            input.ReadMessage(Exception);
            break;
          }
          case 50: {
            if (signal_ == null) {
              Signal = new global::Plcrash.CrashReport.Types.Signal();
            }
            input.ReadMessage(Signal);
            break;
          }
          case 58: {
            if (processInfo_ == null) {
              ProcessInfo = new global::Plcrash.CrashReport.Types.ProcessInfo();
            }
            input.ReadMessage(ProcessInfo);
            break;
          }
          case 66: {
            if (machineInfo_ == null) {
              MachineInfo = new global::Plcrash.CrashReport.Types.MachineInfo();
            }
            input.ReadMessage(MachineInfo);
            break;
          }
          case 74: {
            if (reportInfo_ == null) {
              ReportInfo = new global::Plcrash.CrashReport.Types.ReportInfo();
            }
            input.ReadMessage(ReportInfo);
            break;
          }
          case 82: {
            CustomData = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (systemInfo_ == null) {
              SystemInfo = new global::Plcrash.CrashReport.Types.SystemInfo();
            }
            input.ReadMessage(SystemInfo);
            break;
          }
          case 18: {
            if (applicationInfo_ == null) {
              ApplicationInfo = new global::Plcrash.CrashReport.Types.ApplicationInfo();
            }
            input.ReadMessage(ApplicationInfo);
            break;
          }
          case 26: {
            threads_.AddEntriesFrom(ref input, _repeated_threads_codec);
            break;
          }
          case 34: {
            binaryImages_.AddEntriesFrom(ref input, _repeated_binaryImages_codec);
            break;
          }
          case 42: {
            if (exception_ == null) {
              Exception = new global::Plcrash.CrashReport.Types.Exception();
            }
            input.ReadMessage(Exception);
            break;
          }
          case 50: {
            if (signal_ == null) {
              Signal = new global::Plcrash.CrashReport.Types.Signal();
            }
            input.ReadMessage(Signal);
            break;
          }
          case 58: {
            if (processInfo_ == null) {
              ProcessInfo = new global::Plcrash.CrashReport.Types.ProcessInfo();
            }
            input.ReadMessage(ProcessInfo);
            break;
          }
          case 66: {
            if (machineInfo_ == null) {
              MachineInfo = new global::Plcrash.CrashReport.Types.MachineInfo();
            }
            input.ReadMessage(MachineInfo);
            break;
          }
          case 74: {
            if (reportInfo_ == null) {
              ReportInfo = new global::Plcrash.CrashReport.Types.ReportInfo();
            }
            input.ReadMessage(ReportInfo);
            break;
          }
          case 82: {
            CustomData = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CrashReport message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      ///
      /// Processor information
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Processor : pb::IMessage<Processor>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Processor> _parser = new pb::MessageParser<Processor>(() => new Processor());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Processor> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Processor() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Processor(Processor other) : this() {
          _hasBits0 = other._hasBits0;
          encoding_ = other.encoding_;
          type_ = other.type_;
          subtype_ = other.subtype_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Processor Clone() {
          return new Processor(this);
        }

        /// <summary>Field number for the "encoding" field.</summary>
        public const int EncodingFieldNumber = 1;
        private readonly static global::Plcrash.CrashReport.Types.Processor.Types.TypeEncoding EncodingDefaultValue = global::Plcrash.CrashReport.Types.Processor.Types.TypeEncoding.Unknown;

        private global::Plcrash.CrashReport.Types.Processor.Types.TypeEncoding encoding_;
        /// <summary>
        ///* The CPU type encoding that should be used to interpret cpu_type and cpu_subtype. This value is required. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Plcrash.CrashReport.Types.Processor.Types.TypeEncoding Encoding {
          get { if ((_hasBits0 & 1) != 0) { return encoding_; } else { return EncodingDefaultValue; } }
          set {
            _hasBits0 |= 1;
            encoding_ = value;
          }
        }
        /// <summary>Gets whether the "encoding" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasEncoding {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "encoding" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearEncoding() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private readonly static ulong TypeDefaultValue = 0UL;

        private ulong type_;
        /// <summary>
        ///* The CPU type. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Type {
          get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
          set {
            _hasBits0 |= 2;
            type_ = value;
          }
        }
        /// <summary>Gets whether the "type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasType {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearType() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "subtype" field.</summary>
        public const int SubtypeFieldNumber = 3;
        private readonly static ulong SubtypeDefaultValue = 0UL;

        private ulong subtype_;
        /// <summary>
        ///* The CPU subtype. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Subtype {
          get { if ((_hasBits0 & 4) != 0) { return subtype_; } else { return SubtypeDefaultValue; } }
          set {
            _hasBits0 |= 4;
            subtype_ = value;
          }
        }
        /// <summary>Gets whether the "subtype" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSubtype {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "subtype" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSubtype() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Processor);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Processor other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Encoding != other.Encoding) return false;
          if (Type != other.Type) return false;
          if (Subtype != other.Subtype) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasEncoding) hash ^= Encoding.GetHashCode();
          if (HasType) hash ^= Type.GetHashCode();
          if (HasSubtype) hash ^= Subtype.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasEncoding) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Encoding);
          }
          if (HasType) {
            output.WriteRawTag(16);
            output.WriteUInt64(Type);
          }
          if (HasSubtype) {
            output.WriteRawTag(24);
            output.WriteUInt64(Subtype);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasEncoding) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Encoding);
          }
          if (HasType) {
            output.WriteRawTag(16);
            output.WriteUInt64(Type);
          }
          if (HasSubtype) {
            output.WriteRawTag(24);
            output.WriteUInt64(Subtype);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasEncoding) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Encoding);
          }
          if (HasType) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Type);
          }
          if (HasSubtype) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Subtype);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Processor other) {
          if (other == null) {
            return;
          }
          if (other.HasEncoding) {
            Encoding = other.Encoding;
          }
          if (other.HasType) {
            Type = other.Type;
          }
          if (other.HasSubtype) {
            Subtype = other.Subtype;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Encoding = (global::Plcrash.CrashReport.Types.Processor.Types.TypeEncoding) input.ReadEnum();
                break;
              }
              case 16: {
                Type = input.ReadUInt64();
                break;
              }
              case 24: {
                Subtype = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Encoding = (global::Plcrash.CrashReport.Types.Processor.Types.TypeEncoding) input.ReadEnum();
                break;
              }
              case 16: {
                Type = input.ReadUInt64();
                break;
              }
              case 24: {
                Subtype = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Processor message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// 
          /// CPU Type Encodings
          ///
          /// The wire format maintains support for multiple CPU type encodings; it is expected that different operating
          /// systems may target different processors, and the reported CPU type and subtype information may not be
          /// easily or directly expressed when not using the vendor's own defined types.
          ///
          /// Currently, only Apple Mach CPU type/subtype information is supported by the wire protocol. These types are
          /// stable, intended to be encoded in Mach-O files, and are defined in mach/machine.h on Mac OS X.
          ///
          /// Implementations must gracefully handle the addition of unknown type encodings.
          /// </summary>
          public enum TypeEncoding {
            /// <summary>
            /// Unknown processor type encoding. 
            /// </summary>
            [pbr::OriginalName("TYPE_ENCODING_UNKNOWN")] Unknown = 0,
            /// <summary>
            /// Apple Mach-defined processor types. 
            /// </summary>
            [pbr::OriginalName("TYPE_ENCODING_MACH")] Mach = 1,
          }

        }
        #endregion

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class SystemInfo : pb::IMessage<SystemInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SystemInfo> _parser = new pb::MessageParser<SystemInfo>(() => new SystemInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SystemInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SystemInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SystemInfo(SystemInfo other) : this() {
          _hasBits0 = other._hasBits0;
          operatingSystem_ = other.operatingSystem_;
          osVersion_ = other.osVersion_;
          architecture_ = other.architecture_;
          timestamp_ = other.timestamp_;
          osBuild_ = other.osBuild_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SystemInfo Clone() {
          return new SystemInfo(this);
        }

        /// <summary>Field number for the "operating_system" field.</summary>
        public const int OperatingSystemFieldNumber = 1;
        private readonly static global::Plcrash.CrashReport.Types.SystemInfo.Types.OperatingSystem OperatingSystemDefaultValue = global::Plcrash.CrashReport.Types.SystemInfo.Types.OperatingSystem.OsUnknown;

        private global::Plcrash.CrashReport.Types.SystemInfo.Types.OperatingSystem operatingSystem_;
        /// <summary>
        /// Operating system 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Plcrash.CrashReport.Types.SystemInfo.Types.OperatingSystem OperatingSystem {
          get { if ((_hasBits0 & 1) != 0) { return operatingSystem_; } else { return OperatingSystemDefaultValue; } }
          set {
            _hasBits0 |= 1;
            operatingSystem_ = value;
          }
        }
        /// <summary>Gets whether the "operating_system" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOperatingSystem {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "operating_system" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOperatingSystem() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "os_version" field.</summary>
        public const int OsVersionFieldNumber = 2;
        private readonly static string OsVersionDefaultValue = "";

        private string osVersion_;
        /// <summary>
        /// OS version 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string OsVersion {
          get { return osVersion_ ?? OsVersionDefaultValue; }
          set {
            osVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "os_version" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOsVersion {
          get { return osVersion_ != null; }
        }
        /// <summary>Clears the value of the "os_version" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOsVersion() {
          osVersion_ = null;
        }

        /// <summary>Field number for the "architecture" field.</summary>
        public const int ArchitectureFieldNumber = 3;
        private readonly static global::Plcrash.Architecture ArchitectureDefaultValue = global::Plcrash.Architecture.Unknown;

        private global::Plcrash.Architecture architecture_;
        /// <summary>
        /// Processor architecture (deprecated in favor of machine_info) 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Plcrash.Architecture Architecture {
          get { if ((_hasBits0 & 2) != 0) { return architecture_; } else { return ArchitectureDefaultValue; } }
          set {
            _hasBits0 |= 2;
            architecture_ = value;
          }
        }
        /// <summary>Gets whether the "architecture" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasArchitecture {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "architecture" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearArchitecture() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 4;
        private readonly static long TimestampDefaultValue = 0L;

        private long timestamp_;
        /// <summary>
        /// Date crash report was generated (as seconds since epoch). 0 if the time
        /// is unknown or can not be determined. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Timestamp {
          get { if ((_hasBits0 & 4) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
          set {
            _hasBits0 |= 4;
            timestamp_ = value;
          }
        }
        /// <summary>Gets whether the "timestamp" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTimestamp {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "timestamp" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTimestamp() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "os_build" field.</summary>
        public const int OsBuildFieldNumber = 5;
        private readonly static string OsBuildDefaultValue = "";

        private string osBuild_;
        /// <summary>
        /// OS build number (eg, 10J869) 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string OsBuild {
          get { return osBuild_ ?? OsBuildDefaultValue; }
          set {
            osBuild_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "os_build" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOsBuild {
          get { return osBuild_ != null; }
        }
        /// <summary>Clears the value of the "os_build" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOsBuild() {
          osBuild_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SystemInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SystemInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OperatingSystem != other.OperatingSystem) return false;
          if (OsVersion != other.OsVersion) return false;
          if (Architecture != other.Architecture) return false;
          if (Timestamp != other.Timestamp) return false;
          if (OsBuild != other.OsBuild) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasOperatingSystem) hash ^= OperatingSystem.GetHashCode();
          if (HasOsVersion) hash ^= OsVersion.GetHashCode();
          if (HasArchitecture) hash ^= Architecture.GetHashCode();
          if (HasTimestamp) hash ^= Timestamp.GetHashCode();
          if (HasOsBuild) hash ^= OsBuild.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasOperatingSystem) {
            output.WriteRawTag(8);
            output.WriteEnum((int) OperatingSystem);
          }
          if (HasOsVersion) {
            output.WriteRawTag(18);
            output.WriteString(OsVersion);
          }
          if (HasArchitecture) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Architecture);
          }
          if (HasTimestamp) {
            output.WriteRawTag(32);
            output.WriteInt64(Timestamp);
          }
          if (HasOsBuild) {
            output.WriteRawTag(42);
            output.WriteString(OsBuild);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasOperatingSystem) {
            output.WriteRawTag(8);
            output.WriteEnum((int) OperatingSystem);
          }
          if (HasOsVersion) {
            output.WriteRawTag(18);
            output.WriteString(OsVersion);
          }
          if (HasArchitecture) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Architecture);
          }
          if (HasTimestamp) {
            output.WriteRawTag(32);
            output.WriteInt64(Timestamp);
          }
          if (HasOsBuild) {
            output.WriteRawTag(42);
            output.WriteString(OsBuild);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasOperatingSystem) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperatingSystem);
          }
          if (HasOsVersion) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OsVersion);
          }
          if (HasArchitecture) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Architecture);
          }
          if (HasTimestamp) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
          }
          if (HasOsBuild) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OsBuild);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SystemInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasOperatingSystem) {
            OperatingSystem = other.OperatingSystem;
          }
          if (other.HasOsVersion) {
            OsVersion = other.OsVersion;
          }
          if (other.HasArchitecture) {
            Architecture = other.Architecture;
          }
          if (other.HasTimestamp) {
            Timestamp = other.Timestamp;
          }
          if (other.HasOsBuild) {
            OsBuild = other.OsBuild;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OperatingSystem = (global::Plcrash.CrashReport.Types.SystemInfo.Types.OperatingSystem) input.ReadEnum();
                break;
              }
              case 18: {
                OsVersion = input.ReadString();
                break;
              }
              case 24: {
                Architecture = (global::Plcrash.Architecture) input.ReadEnum();
                break;
              }
              case 32: {
                Timestamp = input.ReadInt64();
                break;
              }
              case 42: {
                OsBuild = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                OperatingSystem = (global::Plcrash.CrashReport.Types.SystemInfo.Types.OperatingSystem) input.ReadEnum();
                break;
              }
              case 18: {
                OsVersion = input.ReadString();
                break;
              }
              case 24: {
                Architecture = (global::Plcrash.Architecture) input.ReadEnum();
                break;
              }
              case 32: {
                Timestamp = input.ReadInt64();
                break;
              }
              case 42: {
                OsBuild = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the SystemInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Known operating system types 
          /// </summary>
          public enum OperatingSystem {
            /// <summary>
            /// Mac OS X 
            /// </summary>
            [pbr::OriginalName("MAC_OS_X")] MacOsX = 0,
            /// <summary>
            /// iPhone OS 
            /// </summary>
            [pbr::OriginalName("IPHONE_OS")] IphoneOs = 1,
            /// <summary>
            /// iPhone Simulator (Mac OS X w/ simulator runtime environment) 
            /// </summary>
            [pbr::OriginalName("IPHONE_SIMULATOR")] IphoneSimulator = 2,
            /// <summary>
            /// Apple tvOS 
            /// </summary>
            [pbr::OriginalName("APPLE_TVOS")] AppleTvos = 4,
            /// <summary>
            /// Unknown operating system. 
            /// </summary>
            [pbr::OriginalName("OS_UNKNOWN")] OsUnknown = 3,
          }

        }
        #endregion

      }

      /// <summary>
      /// Application info 
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ApplicationInfo : pb::IMessage<ApplicationInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ApplicationInfo> _parser = new pb::MessageParser<ApplicationInfo>(() => new ApplicationInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ApplicationInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ApplicationInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ApplicationInfo(ApplicationInfo other) : this() {
          identifier_ = other.identifier_;
          version_ = other.version_;
          marketingVersion_ = other.marketingVersion_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ApplicationInfo Clone() {
          return new ApplicationInfo(this);
        }

        /// <summary>Field number for the "identifier" field.</summary>
        public const int IdentifierFieldNumber = 1;
        private readonly static string IdentifierDefaultValue = "";

        private string identifier_;
        /// <summary>
        /// Unique application identifier 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Identifier {
          get { return identifier_ ?? IdentifierDefaultValue; }
          set {
            identifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "identifier" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIdentifier {
          get { return identifier_ != null; }
        }
        /// <summary>Clears the value of the "identifier" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIdentifier() {
          identifier_ = null;
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 2;
        private readonly static string VersionDefaultValue = "";

        private string version_;
        /// <summary>
        /// Application version string 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Version {
          get { return version_ ?? VersionDefaultValue; }
          set {
            version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "version" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasVersion {
          get { return version_ != null; }
        }
        /// <summary>Clears the value of the "version" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearVersion() {
          version_ = null;
        }

        /// <summary>Field number for the "marketing_version" field.</summary>
        public const int MarketingVersionFieldNumber = 3;
        private readonly static string MarketingVersionDefaultValue = "";

        private string marketingVersion_;
        /// <summary>
        /// Application marketing version string 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string MarketingVersion {
          get { return marketingVersion_ ?? MarketingVersionDefaultValue; }
          set {
            marketingVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "marketing_version" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMarketingVersion {
          get { return marketingVersion_ != null; }
        }
        /// <summary>Clears the value of the "marketing_version" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMarketingVersion() {
          marketingVersion_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ApplicationInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ApplicationInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Identifier != other.Identifier) return false;
          if (Version != other.Version) return false;
          if (MarketingVersion != other.MarketingVersion) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasIdentifier) hash ^= Identifier.GetHashCode();
          if (HasVersion) hash ^= Version.GetHashCode();
          if (HasMarketingVersion) hash ^= MarketingVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasIdentifier) {
            output.WriteRawTag(10);
            output.WriteString(Identifier);
          }
          if (HasVersion) {
            output.WriteRawTag(18);
            output.WriteString(Version);
          }
          if (HasMarketingVersion) {
            output.WriteRawTag(26);
            output.WriteString(MarketingVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasIdentifier) {
            output.WriteRawTag(10);
            output.WriteString(Identifier);
          }
          if (HasVersion) {
            output.WriteRawTag(18);
            output.WriteString(Version);
          }
          if (HasMarketingVersion) {
            output.WriteRawTag(26);
            output.WriteString(MarketingVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasIdentifier) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Identifier);
          }
          if (HasVersion) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
          }
          if (HasMarketingVersion) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketingVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ApplicationInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasIdentifier) {
            Identifier = other.Identifier;
          }
          if (other.HasVersion) {
            Version = other.Version;
          }
          if (other.HasMarketingVersion) {
            MarketingVersion = other.MarketingVersion;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Identifier = input.ReadString();
                break;
              }
              case 18: {
                Version = input.ReadString();
                break;
              }
              case 26: {
                MarketingVersion = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Identifier = input.ReadString();
                break;
              }
              case 18: {
                Version = input.ReadString();
                break;
              }
              case 26: {
                MarketingVersion = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A symbol table entry. 
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Symbol : pb::IMessage<Symbol>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Symbol> _parser = new pb::MessageParser<Symbol>(() => new Symbol());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Symbol> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Symbol() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Symbol(Symbol other) : this() {
          _hasBits0 = other._hasBits0;
          name_ = other.name_;
          startAddress_ = other.startAddress_;
          endAddress_ = other.endAddress_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Symbol Clone() {
          return new Symbol(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        /// <summary>
        /// The symbol name 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "start_address" field.</summary>
        public const int StartAddressFieldNumber = 2;
        private readonly static ulong StartAddressDefaultValue = 0UL;

        private ulong startAddress_;
        /// <summary>
        /// The symbol start address 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong StartAddress {
          get { if ((_hasBits0 & 1) != 0) { return startAddress_; } else { return StartAddressDefaultValue; } }
          set {
            _hasBits0 |= 1;
            startAddress_ = value;
          }
        }
        /// <summary>Gets whether the "start_address" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStartAddress {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "start_address" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStartAddress() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "end_address" field.</summary>
        public const int EndAddressFieldNumber = 3;
        private readonly static ulong EndAddressDefaultValue = 0UL;

        private ulong endAddress_;
        /// <summary>
        /// The symbol end address, if explicitly defined. This will only be included if the end address is
        /// explicitly defined (eg, by DWARF debugging information), will not be derived by best-guess
        /// heuristics. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong EndAddress {
          get { if ((_hasBits0 & 2) != 0) { return endAddress_; } else { return EndAddressDefaultValue; } }
          set {
            _hasBits0 |= 2;
            endAddress_ = value;
          }
        }
        /// <summary>Gets whether the "end_address" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasEndAddress {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "end_address" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearEndAddress() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Symbol);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Symbol other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (StartAddress != other.StartAddress) return false;
          if (EndAddress != other.EndAddress) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (HasStartAddress) hash ^= StartAddress.GetHashCode();
          if (HasEndAddress) hash ^= EndAddress.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasStartAddress) {
            output.WriteRawTag(16);
            output.WriteUInt64(StartAddress);
          }
          if (HasEndAddress) {
            output.WriteRawTag(24);
            output.WriteUInt64(EndAddress);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasStartAddress) {
            output.WriteRawTag(16);
            output.WriteUInt64(StartAddress);
          }
          if (HasEndAddress) {
            output.WriteRawTag(24);
            output.WriteUInt64(EndAddress);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasStartAddress) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartAddress);
          }
          if (HasEndAddress) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EndAddress);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Symbol other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasStartAddress) {
            StartAddress = other.StartAddress;
          }
          if (other.HasEndAddress) {
            EndAddress = other.EndAddress;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                StartAddress = input.ReadUInt64();
                break;
              }
              case 24: {
                EndAddress = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                StartAddress = input.ReadUInt64();
                break;
              }
              case 24: {
                EndAddress = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Thread state 
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Thread : pb::IMessage<Thread>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Thread> _parser = new pb::MessageParser<Thread>(() => new Thread());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Thread> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Thread() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Thread(Thread other) : this() {
          _hasBits0 = other._hasBits0;
          threadNumber_ = other.threadNumber_;
          frames_ = other.frames_.Clone();
          crashed_ = other.crashed_;
          registers_ = other.registers_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Thread Clone() {
          return new Thread(this);
        }

        /// <summary>Field number for the "thread_number" field.</summary>
        public const int ThreadNumberFieldNumber = 1;
        private readonly static uint ThreadNumberDefaultValue = 0;

        private uint threadNumber_;
        /// <summary>
        /// Thread number (indexed at 0, must be unique within a crash report) 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ThreadNumber {
          get { if ((_hasBits0 & 1) != 0) { return threadNumber_; } else { return ThreadNumberDefaultValue; } }
          set {
            _hasBits0 |= 1;
            threadNumber_ = value;
          }
        }
        /// <summary>Gets whether the "thread_number" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasThreadNumber {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "thread_number" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearThreadNumber() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "frames" field.</summary>
        public const int FramesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Plcrash.CrashReport.Types.Thread.Types.StackFrame> _repeated_frames_codec
            = pb::FieldCodec.ForMessage(18, global::Plcrash.CrashReport.Types.Thread.Types.StackFrame.Parser);
        private readonly pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread.Types.StackFrame> frames_ = new pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread.Types.StackFrame>();
        /// <summary>
        /// Backtrace stack frames 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread.Types.StackFrame> Frames {
          get { return frames_; }
        }

        /// <summary>Field number for the "crashed" field.</summary>
        public const int CrashedFieldNumber = 3;
        private readonly static bool CrashedDefaultValue = false;

        private bool crashed_;
        /// <summary>
        /// True if this is the crashed thread 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Crashed {
          get { if ((_hasBits0 & 2) != 0) { return crashed_; } else { return CrashedDefaultValue; } }
          set {
            _hasBits0 |= 2;
            crashed_ = value;
          }
        }
        /// <summary>Gets whether the "crashed" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCrashed {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "crashed" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCrashed() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "registers" field.</summary>
        public const int RegistersFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Plcrash.CrashReport.Types.Thread.Types.RegisterValue> _repeated_registers_codec
            = pb::FieldCodec.ForMessage(34, global::Plcrash.CrashReport.Types.Thread.Types.RegisterValue.Parser);
        private readonly pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread.Types.RegisterValue> registers_ = new pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread.Types.RegisterValue>();
        /// <summary>
        /// Thread registers (required if this is the crashed thread, optional otherwise). Note that if an error occurs
        /// during crash report generation, the register values may be missing for the crashed thread. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread.Types.RegisterValue> Registers {
          get { return registers_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Thread);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Thread other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ThreadNumber != other.ThreadNumber) return false;
          if(!frames_.Equals(other.frames_)) return false;
          if (Crashed != other.Crashed) return false;
          if(!registers_.Equals(other.registers_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasThreadNumber) hash ^= ThreadNumber.GetHashCode();
          hash ^= frames_.GetHashCode();
          if (HasCrashed) hash ^= Crashed.GetHashCode();
          hash ^= registers_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasThreadNumber) {
            output.WriteRawTag(8);
            output.WriteUInt32(ThreadNumber);
          }
          frames_.WriteTo(output, _repeated_frames_codec);
          if (HasCrashed) {
            output.WriteRawTag(24);
            output.WriteBool(Crashed);
          }
          registers_.WriteTo(output, _repeated_registers_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasThreadNumber) {
            output.WriteRawTag(8);
            output.WriteUInt32(ThreadNumber);
          }
          frames_.WriteTo(ref output, _repeated_frames_codec);
          if (HasCrashed) {
            output.WriteRawTag(24);
            output.WriteBool(Crashed);
          }
          registers_.WriteTo(ref output, _repeated_registers_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasThreadNumber) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ThreadNumber);
          }
          size += frames_.CalculateSize(_repeated_frames_codec);
          if (HasCrashed) {
            size += 1 + 1;
          }
          size += registers_.CalculateSize(_repeated_registers_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Thread other) {
          if (other == null) {
            return;
          }
          if (other.HasThreadNumber) {
            ThreadNumber = other.ThreadNumber;
          }
          frames_.Add(other.frames_);
          if (other.HasCrashed) {
            Crashed = other.Crashed;
          }
          registers_.Add(other.registers_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ThreadNumber = input.ReadUInt32();
                break;
              }
              case 18: {
                frames_.AddEntriesFrom(input, _repeated_frames_codec);
                break;
              }
              case 24: {
                Crashed = input.ReadBool();
                break;
              }
              case 34: {
                registers_.AddEntriesFrom(input, _repeated_registers_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ThreadNumber = input.ReadUInt32();
                break;
              }
              case 18: {
                frames_.AddEntriesFrom(ref input, _repeated_frames_codec);
                break;
              }
              case 24: {
                Crashed = input.ReadBool();
                break;
              }
              case 34: {
                registers_.AddEntriesFrom(ref input, _repeated_registers_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Thread message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Stack frame 
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class StackFrame : pb::IMessage<StackFrame>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<StackFrame> _parser = new pb::MessageParser<StackFrame>(() => new StackFrame());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<StackFrame> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Plcrash.CrashReport.Types.Thread.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public StackFrame() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public StackFrame(StackFrame other) : this() {
              _hasBits0 = other._hasBits0;
              pc_ = other.pc_;
              symbol_ = other.symbol_ != null ? other.symbol_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public StackFrame Clone() {
              return new StackFrame(this);
            }

            /// <summary>Field number for the "pc" field.</summary>
            public const int PcFieldNumber = 3;
            private readonly static ulong PcDefaultValue = 0UL;

            private ulong pc_;
            /// <summary>
            /// Instruction pointer 
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ulong Pc {
              get { if ((_hasBits0 & 1) != 0) { return pc_; } else { return PcDefaultValue; } }
              set {
                _hasBits0 |= 1;
                pc_ = value;
              }
            }
            /// <summary>Gets whether the "pc" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasPc {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "pc" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearPc() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "symbol" field.</summary>
            public const int SymbolFieldNumber = 6;
            private global::Plcrash.CrashReport.Types.Symbol symbol_;
            /// <summary>
            ///
            /// Optional symbol information for this frame's PC. If computed client-side, this value is a best guess, and may
            /// be inaccurate.
            /// 
            /// Symbol information may not be available, in which case this field will be excluded from the report.
            ///
            /// This method of encoding symbol records is unfortunately ineffecient, as it is possible that the same
            /// symbol will be included multiple times in a single crash report. Unfortunately, insofar as the crash reporter
            /// must remain async-safe, there is no reasonable way to perform symbol uniquing at the time the report
            /// is written. A future version of this format may resolve this issue, and migrate to the use of an index
            /// into a shared symbol table.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Plcrash.CrashReport.Types.Symbol Symbol {
              get { return symbol_; }
              set {
                symbol_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as StackFrame);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(StackFrame other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Pc != other.Pc) return false;
              if (!object.Equals(Symbol, other.Symbol)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasPc) hash ^= Pc.GetHashCode();
              if (symbol_ != null) hash ^= Symbol.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasPc) {
                output.WriteRawTag(24);
                output.WriteUInt64(Pc);
              }
              if (symbol_ != null) {
                output.WriteRawTag(50);
                output.WriteMessage(Symbol);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasPc) {
                output.WriteRawTag(24);
                output.WriteUInt64(Pc);
              }
              if (symbol_ != null) {
                output.WriteRawTag(50);
                output.WriteMessage(Symbol);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasPc) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Pc);
              }
              if (symbol_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Symbol);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(StackFrame other) {
              if (other == null) {
                return;
              }
              if (other.HasPc) {
                Pc = other.Pc;
              }
              if (other.symbol_ != null) {
                if (symbol_ == null) {
                  Symbol = new global::Plcrash.CrashReport.Types.Symbol();
                }
                Symbol.MergeFrom(other.Symbol);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 24: {
                    Pc = input.ReadUInt64();
                    break;
                  }
                  case 50: {
                    if (symbol_ == null) {
                      Symbol = new global::Plcrash.CrashReport.Types.Symbol();
                    }
                    input.ReadMessage(Symbol);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 24: {
                    Pc = input.ReadUInt64();
                    break;
                  }
                  case 50: {
                    if (symbol_ == null) {
                      Symbol = new global::Plcrash.CrashReport.Types.Symbol();
                    }
                    input.ReadMessage(Symbol);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A single register value 
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class RegisterValue : pb::IMessage<RegisterValue>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<RegisterValue> _parser = new pb::MessageParser<RegisterValue>(() => new RegisterValue());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<RegisterValue> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Plcrash.CrashReport.Types.Thread.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public RegisterValue() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public RegisterValue(RegisterValue other) : this() {
              _hasBits0 = other._hasBits0;
              name_ = other.name_;
              value_ = other.value_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public RegisterValue Clone() {
              return new RegisterValue(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private readonly static string NameDefaultValue = "";

            private string name_;
            /// <summary>
            /// Register name (r1, ebp, ...) 
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Name {
              get { return name_ ?? NameDefaultValue; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "name" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasName {
              get { return name_ != null; }
            }
            /// <summary>Clears the value of the "name" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearName() {
              name_ = null;
            }

            /// <summary>Field number for the "value" field.</summary>
            public const int ValueFieldNumber = 2;
            private readonly static ulong ValueDefaultValue = 0UL;

            private ulong value_;
            /// <summary>
            /// Register value (32-bit or 64-bit) 
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ulong Value {
              get { if ((_hasBits0 & 1) != 0) { return value_; } else { return ValueDefaultValue; } }
              set {
                _hasBits0 |= 1;
                value_ = value;
              }
            }
            /// <summary>Gets whether the "value" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasValue {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "value" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearValue() {
              _hasBits0 &= ~1;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as RegisterValue);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(RegisterValue other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (Value != other.Value) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasName) hash ^= Name.GetHashCode();
              if (HasValue) hash ^= Value.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasName) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (HasValue) {
                output.WriteRawTag(16);
                output.WriteUInt64(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasName) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (HasValue) {
                output.WriteRawTag(16);
                output.WriteUInt64(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasName) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (HasValue) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Value);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(RegisterValue other) {
              if (other == null) {
                return;
              }
              if (other.HasName) {
                Name = other.Name;
              }
              if (other.HasValue) {
                Value = other.Value;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 16: {
                    Value = input.ReadUInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 16: {
                    Value = input.ReadUInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Binary image 
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class BinaryImage : pb::IMessage<BinaryImage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BinaryImage> _parser = new pb::MessageParser<BinaryImage>(() => new BinaryImage());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<BinaryImage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BinaryImage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BinaryImage(BinaryImage other) : this() {
          _hasBits0 = other._hasBits0;
          baseAddress_ = other.baseAddress_;
          size_ = other.size_;
          name_ = other.name_;
          uuid_ = other.uuid_;
          codeType_ = other.codeType_ != null ? other.codeType_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BinaryImage Clone() {
          return new BinaryImage(this);
        }

        /// <summary>Field number for the "base_address" field.</summary>
        public const int BaseAddressFieldNumber = 1;
        private readonly static ulong BaseAddressDefaultValue = 0UL;

        private ulong baseAddress_;
        /// <summary>
        /// Image base address 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong BaseAddress {
          get { if ((_hasBits0 & 1) != 0) { return baseAddress_; } else { return BaseAddressDefaultValue; } }
          set {
            _hasBits0 |= 1;
            baseAddress_ = value;
          }
        }
        /// <summary>Gets whether the "base_address" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBaseAddress {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "base_address" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBaseAddress() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 2;
        private readonly static ulong SizeDefaultValue = 0UL;

        private ulong size_;
        /// <summary>
        /// Segment size 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Size {
          get { if ((_hasBits0 & 2) != 0) { return size_; } else { return SizeDefaultValue; } }
          set {
            _hasBits0 |= 2;
            size_ = value;
          }
        }
        /// <summary>Gets whether the "size" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSize {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "size" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSize() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private readonly static string NameDefaultValue = "";

        private string name_;
        /// <summary>
        /// Name of the binary image (should be a full path name) 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "uuid" field.</summary>
        public const int UuidFieldNumber = 4;
        private readonly static pb::ByteString UuidDefaultValue = pb::ByteString.Empty;

        private pb::ByteString uuid_;
        /// <summary>
        /// 128-bit object UUID (matches Mach-O DWARF dSYM files) 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Uuid {
          get { return uuid_ ?? UuidDefaultValue; }
          set {
            uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "uuid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUuid {
          get { return uuid_ != null; }
        }
        /// <summary>Clears the value of the "uuid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUuid() {
          uuid_ = null;
        }

        /// <summary>Field number for the "code_type" field.</summary>
        public const int CodeTypeFieldNumber = 5;
        private global::Plcrash.CrashReport.Types.Processor codeType_;
        /// <summary>
        /// The image's code type. Should be included in all v1.1+ crash reports. The code type may differ between
        /// binaries in the case of architectures with forwards-compatible code types, such as ARM, where armv6 and
        /// armv7 images may be mixed. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Plcrash.CrashReport.Types.Processor CodeType {
          get { return codeType_; }
          set {
            codeType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as BinaryImage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(BinaryImage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BaseAddress != other.BaseAddress) return false;
          if (Size != other.Size) return false;
          if (Name != other.Name) return false;
          if (Uuid != other.Uuid) return false;
          if (!object.Equals(CodeType, other.CodeType)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasBaseAddress) hash ^= BaseAddress.GetHashCode();
          if (HasSize) hash ^= Size.GetHashCode();
          if (HasName) hash ^= Name.GetHashCode();
          if (HasUuid) hash ^= Uuid.GetHashCode();
          if (codeType_ != null) hash ^= CodeType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasBaseAddress) {
            output.WriteRawTag(8);
            output.WriteUInt64(BaseAddress);
          }
          if (HasSize) {
            output.WriteRawTag(16);
            output.WriteUInt64(Size);
          }
          if (HasName) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (HasUuid) {
            output.WriteRawTag(34);
            output.WriteBytes(Uuid);
          }
          if (codeType_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(CodeType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasBaseAddress) {
            output.WriteRawTag(8);
            output.WriteUInt64(BaseAddress);
          }
          if (HasSize) {
            output.WriteRawTag(16);
            output.WriteUInt64(Size);
          }
          if (HasName) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (HasUuid) {
            output.WriteRawTag(34);
            output.WriteBytes(Uuid);
          }
          if (codeType_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(CodeType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasBaseAddress) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BaseAddress);
          }
          if (HasSize) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Size);
          }
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasUuid) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Uuid);
          }
          if (codeType_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CodeType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(BinaryImage other) {
          if (other == null) {
            return;
          }
          if (other.HasBaseAddress) {
            BaseAddress = other.BaseAddress;
          }
          if (other.HasSize) {
            Size = other.Size;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasUuid) {
            Uuid = other.Uuid;
          }
          if (other.codeType_ != null) {
            if (codeType_ == null) {
              CodeType = new global::Plcrash.CrashReport.Types.Processor();
            }
            CodeType.MergeFrom(other.CodeType);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                BaseAddress = input.ReadUInt64();
                break;
              }
              case 16: {
                Size = input.ReadUInt64();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                Uuid = input.ReadBytes();
                break;
              }
              case 42: {
                if (codeType_ == null) {
                  CodeType = new global::Plcrash.CrashReport.Types.Processor();
                }
                input.ReadMessage(CodeType);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                BaseAddress = input.ReadUInt64();
                break;
              }
              case 16: {
                Size = input.ReadUInt64();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                Uuid = input.ReadBytes();
                break;
              }
              case 42: {
                if (codeType_ == null) {
                  CodeType = new global::Plcrash.CrashReport.Types.Processor();
                }
                input.ReadMessage(CodeType);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Exception 
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Exception : pb::IMessage<Exception>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Exception> _parser = new pb::MessageParser<Exception>(() => new Exception());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Exception> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Exception() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Exception(Exception other) : this() {
          name_ = other.name_;
          reason_ = other.reason_;
          frames_ = other.frames_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Exception Clone() {
          return new Exception(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        /// <summary>
        /// The exception name that triggered this crash 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "reason" field.</summary>
        public const int ReasonFieldNumber = 2;
        private readonly static string ReasonDefaultValue = "";

        private string reason_;
        /// <summary>
        /// The exception reason 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Reason {
          get { return reason_ ?? ReasonDefaultValue; }
          set {
            reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "reason" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasReason {
          get { return reason_ != null; }
        }
        /// <summary>Clears the value of the "reason" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearReason() {
          reason_ = null;
        }

        /// <summary>Field number for the "frames" field.</summary>
        public const int FramesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Plcrash.CrashReport.Types.Thread.Types.StackFrame> _repeated_frames_codec
            = pb::FieldCodec.ForMessage(26, global::Plcrash.CrashReport.Types.Thread.Types.StackFrame.Parser);
        private readonly pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread.Types.StackFrame> frames_ = new pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread.Types.StackFrame>();
        /// <summary>
        /// The exception's original call stack, if available. This may be preserved across rethrow of an exception,
        /// and can be used to determine the original call stack. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Plcrash.CrashReport.Types.Thread.Types.StackFrame> Frames {
          get { return frames_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Exception);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Exception other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Reason != other.Reason) return false;
          if(!frames_.Equals(other.frames_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (HasReason) hash ^= Reason.GetHashCode();
          hash ^= frames_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasReason) {
            output.WriteRawTag(18);
            output.WriteString(Reason);
          }
          frames_.WriteTo(output, _repeated_frames_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasReason) {
            output.WriteRawTag(18);
            output.WriteString(Reason);
          }
          frames_.WriteTo(ref output, _repeated_frames_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasReason) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
          }
          size += frames_.CalculateSize(_repeated_frames_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Exception other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasReason) {
            Reason = other.Reason;
          }
          frames_.Add(other.frames_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Reason = input.ReadString();
                break;
              }
              case 26: {
                frames_.AddEntriesFrom(input, _repeated_frames_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Reason = input.ReadString();
                break;
              }
              case 26: {
                frames_.AddEntriesFrom(ref input, _repeated_frames_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Signal Information 
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Signal : pb::IMessage<Signal>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Signal> _parser = new pb::MessageParser<Signal>(() => new Signal());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Signal> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Signal() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Signal(Signal other) : this() {
          _hasBits0 = other._hasBits0;
          name_ = other.name_;
          code_ = other.code_;
          address_ = other.address_;
          machException_ = other.machException_ != null ? other.machException_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Signal Clone() {
          return new Signal(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        /// <summary>
        ///* Signal name 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 2;
        private readonly static string CodeDefaultValue = "";

        private string code_;
        /// <summary>
        /// Signal code 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Code {
          get { return code_ ?? CodeDefaultValue; }
          set {
            code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "code" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCode {
          get { return code_ != null; }
        }
        /// <summary>Clears the value of the "code" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCode() {
          code_ = null;
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 3;
        private readonly static ulong AddressDefaultValue = 0UL;

        private ulong address_;
        /// <summary>
        /// Faulting instruction or address 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Address {
          get { if ((_hasBits0 & 1) != 0) { return address_; } else { return AddressDefaultValue; } }
          set {
            _hasBits0 |= 1;
            address_ = value;
          }
        }
        /// <summary>Gets whether the "address" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAddress {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "address" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAddress() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "mach_exception" field.</summary>
        public const int MachExceptionFieldNumber = 4;
        private global::Plcrash.CrashReport.Types.Signal.Types.MachException machException_;
        /// <summary>
        ///
        /// The Mach Exception that triggered the crash. This field will only be included in the
        /// case that encoding crash reporter's exception-based reporting was enabled, and a Mach
        /// exception was caught.
        ///
        /// If the mach_exception field is defined, the legacy signal info will also be provided; this is required to maintain
        /// backwards compatibility with existing report handlers. Note, however, that the signal info may be derived from the
        /// Mach exception info by the encoding crash reporter, and thus may not exactly match the kernel exception-to-signal
        /// mappings implemented in xnu. As such, when Mach exception data is available, its use should be preferred.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Plcrash.CrashReport.Types.Signal.Types.MachException MachException {
          get { return machException_; }
          set {
            machException_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Signal);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Signal other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Code != other.Code) return false;
          if (Address != other.Address) return false;
          if (!object.Equals(MachException, other.MachException)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (HasCode) hash ^= Code.GetHashCode();
          if (HasAddress) hash ^= Address.GetHashCode();
          if (machException_ != null) hash ^= MachException.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasCode) {
            output.WriteRawTag(18);
            output.WriteString(Code);
          }
          if (HasAddress) {
            output.WriteRawTag(24);
            output.WriteUInt64(Address);
          }
          if (machException_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(MachException);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasCode) {
            output.WriteRawTag(18);
            output.WriteString(Code);
          }
          if (HasAddress) {
            output.WriteRawTag(24);
            output.WriteUInt64(Address);
          }
          if (machException_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(MachException);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasCode) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
          }
          if (HasAddress) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Address);
          }
          if (machException_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MachException);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Signal other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasCode) {
            Code = other.Code;
          }
          if (other.HasAddress) {
            Address = other.Address;
          }
          if (other.machException_ != null) {
            if (machException_ == null) {
              MachException = new global::Plcrash.CrashReport.Types.Signal.Types.MachException();
            }
            MachException.MergeFrom(other.MachException);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Code = input.ReadString();
                break;
              }
              case 24: {
                Address = input.ReadUInt64();
                break;
              }
              case 34: {
                if (machException_ == null) {
                  MachException = new global::Plcrash.CrashReport.Types.Signal.Types.MachException();
                }
                input.ReadMessage(MachException);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Code = input.ReadString();
                break;
              }
              case 24: {
                Address = input.ReadUInt64();
                break;
              }
              case 34: {
                if (machException_ == null) {
                  MachException = new global::Plcrash.CrashReport.Types.Signal.Types.MachException();
                }
                input.ReadMessage(MachException);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Signal message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          ///
          /// Mach exception info.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class MachException : pb::IMessage<MachException>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MachException> _parser = new pb::MessageParser<MachException>(() => new MachException());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<MachException> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Plcrash.CrashReport.Types.Signal.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MachException() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MachException(MachException other) : this() {
              _hasBits0 = other._hasBits0;
              type_ = other.type_;
              codes_ = other.codes_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MachException Clone() {
              return new MachException(this);
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 1;
            private readonly static ulong TypeDefaultValue = 0UL;

            private ulong type_;
            /// <summary>
            /// The exception type. These values will generally be common across most Apple platforms. 
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ulong Type {
              get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
              set {
                _hasBits0 |= 1;
                type_ = value;
              }
            }
            /// <summary>Gets whether the "type" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasType {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "type" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearType() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "codes" field.</summary>
            public const int CodesFieldNumber = 2;
            private static readonly pb::FieldCodec<ulong> _repeated_codes_codec
                = pb::FieldCodec.ForUInt64(16);
            private readonly pbc::RepeatedField<ulong> codes_ = new pbc::RepeatedField<ulong>();
            /// <summary>
            /// The exception codes. Interpretation of these values depends on the exception type, and/or the
            /// faulting platform. 
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<ulong> Codes {
              get { return codes_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as MachException);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(MachException other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Type != other.Type) return false;
              if(!codes_.Equals(other.codes_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasType) hash ^= Type.GetHashCode();
              hash ^= codes_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasType) {
                output.WriteRawTag(8);
                output.WriteUInt64(Type);
              }
              codes_.WriteTo(output, _repeated_codes_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasType) {
                output.WriteRawTag(8);
                output.WriteUInt64(Type);
              }
              codes_.WriteTo(ref output, _repeated_codes_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasType) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Type);
              }
              size += codes_.CalculateSize(_repeated_codes_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(MachException other) {
              if (other == null) {
                return;
              }
              if (other.HasType) {
                Type = other.Type;
              }
              codes_.Add(other.codes_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Type = input.ReadUInt64();
                    break;
                  }
                  case 18:
                  case 16: {
                    codes_.AddEntriesFrom(input, _repeated_codes_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Type = input.ReadUInt64();
                    break;
                  }
                  case 18:
                  case 16: {
                    codes_.AddEntriesFrom(ref input, _repeated_codes_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Process Data. This was not available in earlier releases of the crash reporter and is marked optional
      /// for compatibility. 
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ProcessInfo : pb::IMessage<ProcessInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ProcessInfo> _parser = new pb::MessageParser<ProcessInfo>(() => new ProcessInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ProcessInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProcessInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProcessInfo(ProcessInfo other) : this() {
          _hasBits0 = other._hasBits0;
          processName_ = other.processName_;
          processId_ = other.processId_;
          processPath_ = other.processPath_;
          parentProcessName_ = other.parentProcessName_;
          parentProcessId_ = other.parentProcessId_;
          native_ = other.native_;
          startTime_ = other.startTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProcessInfo Clone() {
          return new ProcessInfo(this);
        }

        /// <summary>Field number for the "process_name" field.</summary>
        public const int ProcessNameFieldNumber = 1;
        private readonly static string ProcessNameDefaultValue = "";

        private string processName_;
        /// <summary>
        /// Application process name 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ProcessName {
          get { return processName_ ?? ProcessNameDefaultValue; }
          set {
            processName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "process_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProcessName {
          get { return processName_ != null; }
        }
        /// <summary>Clears the value of the "process_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProcessName() {
          processName_ = null;
        }

        /// <summary>Field number for the "process_id" field.</summary>
        public const int ProcessIdFieldNumber = 2;
        private readonly static uint ProcessIdDefaultValue = 0;

        private uint processId_;
        /// <summary>
        /// Application process ID 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProcessId {
          get { if ((_hasBits0 & 1) != 0) { return processId_; } else { return ProcessIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            processId_ = value;
          }
        }
        /// <summary>Gets whether the "process_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProcessId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "process_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProcessId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "process_path" field.</summary>
        public const int ProcessPathFieldNumber = 3;
        private readonly static string ProcessPathDefaultValue = "";

        private string processPath_;
        /// <summary>
        /// Application process path 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ProcessPath {
          get { return processPath_ ?? ProcessPathDefaultValue; }
          set {
            processPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "process_path" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProcessPath {
          get { return processPath_ != null; }
        }
        /// <summary>Clears the value of the "process_path" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProcessPath() {
          processPath_ = null;
        }

        /// <summary>Field number for the "parent_process_name" field.</summary>
        public const int ParentProcessNameFieldNumber = 4;
        private readonly static string ParentProcessNameDefaultValue = "";

        private string parentProcessName_;
        /// <summary>
        /// Application parent process name 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ParentProcessName {
          get { return parentProcessName_ ?? ParentProcessNameDefaultValue; }
          set {
            parentProcessName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "parent_process_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasParentProcessName {
          get { return parentProcessName_ != null; }
        }
        /// <summary>Clears the value of the "parent_process_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearParentProcessName() {
          parentProcessName_ = null;
        }

        /// <summary>Field number for the "parent_process_id" field.</summary>
        public const int ParentProcessIdFieldNumber = 5;
        private readonly static uint ParentProcessIdDefaultValue = 0;

        private uint parentProcessId_;
        /// <summary>
        /// Application parent process ID 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ParentProcessId {
          get { if ((_hasBits0 & 2) != 0) { return parentProcessId_; } else { return ParentProcessIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            parentProcessId_ = value;
          }
        }
        /// <summary>Gets whether the "parent_process_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasParentProcessId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "parent_process_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearParentProcessId() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "native" field.</summary>
        public const int NativeFieldNumber = 6;
        private readonly static bool NativeDefaultValue = false;

        private bool native_;
        /// <summary>
        ///* If false, the process is being run via process-level CPU emulation (such as Rosetta). 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Native {
          get { if ((_hasBits0 & 4) != 0) { return native_; } else { return NativeDefaultValue; } }
          set {
            _hasBits0 |= 4;
            native_ = value;
          }
        }
        /// <summary>Gets whether the "native" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNative {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "native" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNative() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "start_time" field.</summary>
        public const int StartTimeFieldNumber = 7;
        private readonly static ulong StartTimeDefaultValue = 0UL;

        private ulong startTime_;
        /// <summary>
        ///* The start time of the process (as seconds since UNIX epoch). The field may be
        /// ommitted if the start time can not be determined. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong StartTime {
          get { if ((_hasBits0 & 8) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
          set {
            _hasBits0 |= 8;
            startTime_ = value;
          }
        }
        /// <summary>Gets whether the "start_time" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStartTime {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "start_time" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStartTime() {
          _hasBits0 &= ~8;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ProcessInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ProcessInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProcessName != other.ProcessName) return false;
          if (ProcessId != other.ProcessId) return false;
          if (ProcessPath != other.ProcessPath) return false;
          if (ParentProcessName != other.ParentProcessName) return false;
          if (ParentProcessId != other.ParentProcessId) return false;
          if (Native != other.Native) return false;
          if (StartTime != other.StartTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasProcessName) hash ^= ProcessName.GetHashCode();
          if (HasProcessId) hash ^= ProcessId.GetHashCode();
          if (HasProcessPath) hash ^= ProcessPath.GetHashCode();
          if (HasParentProcessName) hash ^= ParentProcessName.GetHashCode();
          if (HasParentProcessId) hash ^= ParentProcessId.GetHashCode();
          if (HasNative) hash ^= Native.GetHashCode();
          if (HasStartTime) hash ^= StartTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasProcessName) {
            output.WriteRawTag(10);
            output.WriteString(ProcessName);
          }
          if (HasProcessId) {
            output.WriteRawTag(16);
            output.WriteUInt32(ProcessId);
          }
          if (HasProcessPath) {
            output.WriteRawTag(26);
            output.WriteString(ProcessPath);
          }
          if (HasParentProcessName) {
            output.WriteRawTag(34);
            output.WriteString(ParentProcessName);
          }
          if (HasParentProcessId) {
            output.WriteRawTag(40);
            output.WriteUInt32(ParentProcessId);
          }
          if (HasNative) {
            output.WriteRawTag(48);
            output.WriteBool(Native);
          }
          if (HasStartTime) {
            output.WriteRawTag(56);
            output.WriteUInt64(StartTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasProcessName) {
            output.WriteRawTag(10);
            output.WriteString(ProcessName);
          }
          if (HasProcessId) {
            output.WriteRawTag(16);
            output.WriteUInt32(ProcessId);
          }
          if (HasProcessPath) {
            output.WriteRawTag(26);
            output.WriteString(ProcessPath);
          }
          if (HasParentProcessName) {
            output.WriteRawTag(34);
            output.WriteString(ParentProcessName);
          }
          if (HasParentProcessId) {
            output.WriteRawTag(40);
            output.WriteUInt32(ParentProcessId);
          }
          if (HasNative) {
            output.WriteRawTag(48);
            output.WriteBool(Native);
          }
          if (HasStartTime) {
            output.WriteRawTag(56);
            output.WriteUInt64(StartTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasProcessName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessName);
          }
          if (HasProcessId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProcessId);
          }
          if (HasProcessPath) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessPath);
          }
          if (HasParentProcessName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentProcessName);
          }
          if (HasParentProcessId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ParentProcessId);
          }
          if (HasNative) {
            size += 1 + 1;
          }
          if (HasStartTime) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ProcessInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasProcessName) {
            ProcessName = other.ProcessName;
          }
          if (other.HasProcessId) {
            ProcessId = other.ProcessId;
          }
          if (other.HasProcessPath) {
            ProcessPath = other.ProcessPath;
          }
          if (other.HasParentProcessName) {
            ParentProcessName = other.ParentProcessName;
          }
          if (other.HasParentProcessId) {
            ParentProcessId = other.ParentProcessId;
          }
          if (other.HasNative) {
            Native = other.Native;
          }
          if (other.HasStartTime) {
            StartTime = other.StartTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ProcessName = input.ReadString();
                break;
              }
              case 16: {
                ProcessId = input.ReadUInt32();
                break;
              }
              case 26: {
                ProcessPath = input.ReadString();
                break;
              }
              case 34: {
                ParentProcessName = input.ReadString();
                break;
              }
              case 40: {
                ParentProcessId = input.ReadUInt32();
                break;
              }
              case 48: {
                Native = input.ReadBool();
                break;
              }
              case 56: {
                StartTime = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                ProcessName = input.ReadString();
                break;
              }
              case 16: {
                ProcessId = input.ReadUInt32();
                break;
              }
              case 26: {
                ProcessPath = input.ReadString();
                break;
              }
              case 34: {
                ParentProcessName = input.ReadString();
                break;
              }
              case 40: {
                ParentProcessId = input.ReadUInt32();
                break;
              }
              case 48: {
                Native = input.ReadBool();
                break;
              }
              case 56: {
                StartTime = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///
      /// Host architecture information.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class MachineInfo : pb::IMessage<MachineInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MachineInfo> _parser = new pb::MessageParser<MachineInfo>(() => new MachineInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MachineInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MachineInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MachineInfo(MachineInfo other) : this() {
          _hasBits0 = other._hasBits0;
          model_ = other.model_;
          processor_ = other.processor_ != null ? other.processor_.Clone() : null;
          processorCount_ = other.processorCount_;
          logicalProcessorCount_ = other.logicalProcessorCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MachineInfo Clone() {
          return new MachineInfo(this);
        }

        /// <summary>Field number for the "model" field.</summary>
        public const int ModelFieldNumber = 1;
        private readonly static string ModelDefaultValue = "";

        private string model_;
        /// <summary>
        /// Hardware model (eg, MacBookPro6,1) 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Model {
          get { return model_ ?? ModelDefaultValue; }
          set {
            model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "model" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasModel {
          get { return model_ != null; }
        }
        /// <summary>Clears the value of the "model" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearModel() {
          model_ = null;
        }

        /// <summary>Field number for the "processor" field.</summary>
        public const int ProcessorFieldNumber = 2;
        private global::Plcrash.CrashReport.Types.Processor processor_;
        /// <summary>
        /// The host processor. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Plcrash.CrashReport.Types.Processor Processor {
          get { return processor_; }
          set {
            processor_ = value;
          }
        }

        /// <summary>Field number for the "processor_count" field.</summary>
        public const int ProcessorCountFieldNumber = 3;
        private readonly static uint ProcessorCountDefaultValue = 0;

        private uint processorCount_;
        /// <summary>
        ///
        /// The number of actual physical processor cores. Note that the number of active processors may be managed by the
        /// operating system's power management system, and this value may not reflect the number of active
        /// processors at the time of the crash. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProcessorCount {
          get { if ((_hasBits0 & 1) != 0) { return processorCount_; } else { return ProcessorCountDefaultValue; } }
          set {
            _hasBits0 |= 1;
            processorCount_ = value;
          }
        }
        /// <summary>Gets whether the "processor_count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProcessorCount {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "processor_count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProcessorCount() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "logical_processor_count" field.</summary>
        public const int LogicalProcessorCountFieldNumber = 4;
        private readonly static uint LogicalProcessorCountDefaultValue = 0;

        private uint logicalProcessorCount_;
        /// <summary>
        /// The number of logical processors.  Note that the number of active processors may be managed by the
        /// operating system's power management system, and this value may not reflect the number of active
        /// processors at the time of the crash.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint LogicalProcessorCount {
          get { if ((_hasBits0 & 2) != 0) { return logicalProcessorCount_; } else { return LogicalProcessorCountDefaultValue; } }
          set {
            _hasBits0 |= 2;
            logicalProcessorCount_ = value;
          }
        }
        /// <summary>Gets whether the "logical_processor_count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLogicalProcessorCount {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "logical_processor_count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLogicalProcessorCount() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MachineInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MachineInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Model != other.Model) return false;
          if (!object.Equals(Processor, other.Processor)) return false;
          if (ProcessorCount != other.ProcessorCount) return false;
          if (LogicalProcessorCount != other.LogicalProcessorCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasModel) hash ^= Model.GetHashCode();
          if (processor_ != null) hash ^= Processor.GetHashCode();
          if (HasProcessorCount) hash ^= ProcessorCount.GetHashCode();
          if (HasLogicalProcessorCount) hash ^= LogicalProcessorCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasModel) {
            output.WriteRawTag(10);
            output.WriteString(Model);
          }
          if (processor_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Processor);
          }
          if (HasProcessorCount) {
            output.WriteRawTag(24);
            output.WriteUInt32(ProcessorCount);
          }
          if (HasLogicalProcessorCount) {
            output.WriteRawTag(32);
            output.WriteUInt32(LogicalProcessorCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasModel) {
            output.WriteRawTag(10);
            output.WriteString(Model);
          }
          if (processor_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Processor);
          }
          if (HasProcessorCount) {
            output.WriteRawTag(24);
            output.WriteUInt32(ProcessorCount);
          }
          if (HasLogicalProcessorCount) {
            output.WriteRawTag(32);
            output.WriteUInt32(LogicalProcessorCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasModel) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
          }
          if (processor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Processor);
          }
          if (HasProcessorCount) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProcessorCount);
          }
          if (HasLogicalProcessorCount) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LogicalProcessorCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MachineInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasModel) {
            Model = other.Model;
          }
          if (other.processor_ != null) {
            if (processor_ == null) {
              Processor = new global::Plcrash.CrashReport.Types.Processor();
            }
            Processor.MergeFrom(other.Processor);
          }
          if (other.HasProcessorCount) {
            ProcessorCount = other.ProcessorCount;
          }
          if (other.HasLogicalProcessorCount) {
            LogicalProcessorCount = other.LogicalProcessorCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Model = input.ReadString();
                break;
              }
              case 18: {
                if (processor_ == null) {
                  Processor = new global::Plcrash.CrashReport.Types.Processor();
                }
                input.ReadMessage(Processor);
                break;
              }
              case 24: {
                ProcessorCount = input.ReadUInt32();
                break;
              }
              case 32: {
                LogicalProcessorCount = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Model = input.ReadString();
                break;
              }
              case 18: {
                if (processor_ == null) {
                  Processor = new global::Plcrash.CrashReport.Types.Processor();
                }
                input.ReadMessage(Processor);
                break;
              }
              case 24: {
                ProcessorCount = input.ReadUInt32();
                break;
              }
              case 32: {
                LogicalProcessorCount = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///
      /// Report format information
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ReportInfo : pb::IMessage<ReportInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ReportInfo> _parser = new pb::MessageParser<ReportInfo>(() => new ReportInfo());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ReportInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Plcrash.CrashReport.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ReportInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ReportInfo(ReportInfo other) : this() {
          _hasBits0 = other._hasBits0;
          userRequested_ = other.userRequested_;
          uuid_ = other.uuid_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ReportInfo Clone() {
          return new ReportInfo(this);
        }

        /// <summary>Field number for the "user_requested" field.</summary>
        public const int UserRequestedFieldNumber = 1;
        private readonly static bool UserRequestedDefaultValue = false;

        private bool userRequested_;
        /// <summary>
        ///* If true, this report was generated on request, and no crash occured. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UserRequested {
          get { if ((_hasBits0 & 1) != 0) { return userRequested_; } else { return UserRequestedDefaultValue; } }
          set {
            _hasBits0 |= 1;
            userRequested_ = value;
          }
        }
        /// <summary>Gets whether the "user_requested" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUserRequested {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "user_requested" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUserRequested() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "uuid" field.</summary>
        public const int UuidFieldNumber = 2;
        private readonly static pb::ByteString UuidDefaultValue = pb::ByteString.Empty;

        private pb::ByteString uuid_;
        /// <summary>
        ///* A client-generated 16 byte OSF standard UUID for this report. May be used to filter duplicate reports submitted
        /// by a single client. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Uuid {
          get { return uuid_ ?? UuidDefaultValue; }
          set {
            uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "uuid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUuid {
          get { return uuid_ != null; }
        }
        /// <summary>Clears the value of the "uuid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUuid() {
          uuid_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ReportInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ReportInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserRequested != other.UserRequested) return false;
          if (Uuid != other.Uuid) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasUserRequested) hash ^= UserRequested.GetHashCode();
          if (HasUuid) hash ^= Uuid.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasUserRequested) {
            output.WriteRawTag(8);
            output.WriteBool(UserRequested);
          }
          if (HasUuid) {
            output.WriteRawTag(18);
            output.WriteBytes(Uuid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasUserRequested) {
            output.WriteRawTag(8);
            output.WriteBool(UserRequested);
          }
          if (HasUuid) {
            output.WriteRawTag(18);
            output.WriteBytes(Uuid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasUserRequested) {
            size += 1 + 1;
          }
          if (HasUuid) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Uuid);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ReportInfo other) {
          if (other == null) {
            return;
          }
          if (other.HasUserRequested) {
            UserRequested = other.UserRequested;
          }
          if (other.HasUuid) {
            Uuid = other.Uuid;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                UserRequested = input.ReadBool();
                break;
              }
              case 18: {
                Uuid = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                UserRequested = input.ReadBool();
                break;
              }
              case 18: {
                Uuid = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
